# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm install

    - name: code checkout
      uses: actions/checkout@v2

    - name: install the gcloud cli
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GOOGLE_PROJECT }}
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        install_components: 'gke-gcloud-auth-plugin'
        export_default_credentials: true

    - name: build and push the docker image
      env:
        GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev
        docker build -t us-central1-docker.pkg.dev/original-nation-408710/docker/node:latest .
        docker push us-central1-docker.pkg.dev/original-nation-408710/docker/node:latest
    - name: deploy to gke
      env:
        GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
      run: |
        gcloud container clusters get-credentials cluster-1 --region us-central1-c
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
